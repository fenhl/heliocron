name: "Build Releases"

on:
  workflow_call:

env:
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_DEV_DEBUG: 0

jobs:
  build:
    name: "Build binaries"
    runs-on: ${{ matrix.info.os }}
    env:
      RUST_BACKTRACE: 1
    strategy:
      fail-fast: false
      matrix:
        info:
          - {
              os: "ubuntu-18.04",
              target: "x86_64-unknown-linux-gnu",
              cross: false,
            }
          - {
              os: "ubuntu-18.04",
              target: "armv7-unknown-linux-gnueabihf",
              cross: true,
            }
          - {
              os: "ubuntu-18.04",
              target: "arm-unknown-linux-gnueabihf",
              cross: true,
            }
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.info.target }}

      - name: Enable Rust cache
        uses: Swatinem/rust-cache@cb2cf0cc7c5198d3364b9630e2c3d457f160790c # 1.4.0
        with:
          key: ${{ matrix.info.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --verbose --locked --target=${{ matrix.info.target }}
          use-cross: ${{ matrix.info.cross }}

      - name: Build archive
        shell: bash
        run: |
          cp target/${{ matrix.info.target }}/release/heliocron ./heliocron
          tar -czvf "heliocron-${GITHUB_REF#refs/tags/}-${{ matrix.info.target }}.tar.gz" heliocron README.md LICENSE-APACHE LICENSE-MIT
          echo "ASSET=heliocron-${GITHUB_REF#refs/tags/}-${{ matrix.info.target }}.tar.gz" >> $GITHUB_ENV

      - name: Create release directory for artifact, move file
        shell: bash
        run: |
          mkdir release
          mv ${{ env.ASSET }} release/

      - name: Save release as artifact
        uses: actions/upload-artifact@v2
        with:
          retention-days: 3
          name: release
          path: release