name: CI

on:
  pull_request:
    branches:
    - master
  workflow_dispatch: ~

jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build:
        - pinned
        - stable
        - beta
        include:
        - build: pinned
          os: ubuntu-18.04
          rust: 1.56.0
        - build: stable
          os: ubuntu-18.04
          rust: stable
        - build: beta
          os: ubuntu-18.04
          rust: beta
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true
    
    - name: Build heliocron
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose --features integration-test

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal
        components: rustfmt

    - name: Check formatting
      run: cargo fmt -- --check

env:
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_DEV_DEBUG: 0

jobs:
  # Runs rustfmt + tests + clippy
  supported:
    runs-on: ${{ matrix.triple.os }}
    strategy:
      fail-fast: false
      matrix:
        triple:
          - {
              os: "ubuntu-latest",
              target: "x86_64-unknown-linux-gnu",
              cross: false,
            }
          - {
              os: "ubuntu-latest",
              target: "armv7-unknown-linux-gnueabihf",
              cross: true,
            }
          - {
              os: "ubuntu-latest",
              target: "arm-unknown-linux-gnueabihf",
              cross: true,
            }
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          profile: minimal
          target: ${{ matrix.triple.target }}

      - name: Enable Rust cache
        uses: Swatinem/rust-cache@cb2cf0cc7c5198d3364b9630e2c3d457f160790c # 1.4.0

      - name: Check cargo fmt
        run: cargo fmt --all -- --check

      - name: Build tests
        if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-run --locked
          use-cross: ${{ matrix.triple.cross }}
        env:
          RUST_BACKTRACE: full

      - name: Run tests
        if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-fail-fast -- --nocapture --quiet
          use-cross: ${{ matrix.triple.cross }}
        env:
          RUST_BACKTRACE: full

      - name: Run clippy
        if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets -- -D warnings
          use-cross: ${{ matrix.triple.cross }}
        env:
          RUST_BACKTRACE: full